# General {{{1
run-shell 'tmux set-environment -g TMUX_VERSION $(tmux -V | grep -Eo "[0-9]+([.][0-9]+)?")'

if-shell '! command -v bc &> /dev/null' {
	display-message "TMUX configuration requires 'bc'"
}

# Do not run login shell
set-option -g default-command "${SHELL}"

# Set terminal window title
set-option -g set-titles on
set-option -g set-titles-string '#S â€¢ #T'

# Set the default TERM
set-option -g default-terminal tmux

# Update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set-option -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION SSH_TTY WINDOWID XAUTHORITY TERM'
# Determine if we should enable 256-color support
if-shell "[[ $TERM =~ 256color || $TERM == fbterm || $TERM =~ foot ]]" {
	set-option -g default-terminal tmux-256color
}

# Enable terminal support for BGR 24-bit color
set-option -ga terminal-overrides ',*-256color:Tc'

# Set scrollback history to 30000 (30K)
set-option -g history-limit 30000

set-option -g focus-events on

# Enable mouse control
if-shell -b '[ $(echo "$TMUX_VERSION < 2.1" | bc) -eq 1 ]' {
	set-option -g mode-mouse on
	set-option -g mouse-select-window on
	set-option -g mouse-select-pane on
	set-option -g mouse-resize-pane on
}
if-shell -b '[ $(echo "$TMUX_VERSION >= 2.1" | bc) -eq 1 ]' {
	set-option -g mouse on
}

# Start indices on correct side of keyboard (0 by default)
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Allow faster command sequences
set-option -s escape-time 0

# Set main window size for main layouts
if-shell -b '[ $(echo "$TMUX_VERSION >= 3.2" | bc) -eq 1 ]' {
	set-option -g main-pane-height 70%
	set-option -g main-pane-width 70%
}

# Use vi-like status and mode keys
set-option -g status-keys vi
set-option -g mode-keys vi

# Set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
set-option -g prefix C-a
unbind-key C-b

# Use send-prefix to pass C-a through to application
bind-key C-a send-prefix

# Reload ~/.tmux.conf using PREFIX r
bind-key r source-file ~/.tmux.conf\; display-message 'Reloaded!'

# Use prefix-'|' to split window horizontally and prefix-'-' to split vertically
bind-key | split-window -h
bind-key - split-window -v

# Map vi-like movement keys as pane movement keys
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Pane resizing
bind-key C-h resize-pane -L 5
bind-key C-j resize-pane -D 5
bind-key C-k resize-pane -U 5
bind-key C-l resize-pane -R 5

# pass "Ptmux;" escape sequences through to the terminal
if-shell -b '[ $(echo "$TMUX_VERSION >= 3.3" | bc) -eq 1 ]' {
	set-window-option -g allow-passthrough on
}

# transfer copied text to attached terminal with yank
if-shell -b '[ $(echo "$TMUX_VERSION >= 2.4" | bc) -eq 1 ]' {
	bind-key -T copy-mode-vi v send-keys -X begin-selection
	bind-key -T copy-mode-vi y send-keys -X copy-pipe "yank > #{pane_tty}"
	bind-key -T copy-mode-vi V send-keys -X rectangle-toggle
}
# transfer most-recently copied text to attached terminal with yank
bind-key -n M-y run-shell 'tmux save-buffer - | yank > #{pane_tty}'
# transfer previously copied text (chosen from a menu) to attached terminal
bind-key -n M-Y choose-buffer 'run-shell "tmux save-buffer -b \"%%%\" - | yank > #{pane_tty}"'
bind-key C-p run 'xclip -out -selection clipboard | tmux load-buffer -; tmux paste-buffer'

# join the most recently visited pane to current window in a vertical split
bind-key @ join-pane -h -s !
# select a pane to join to current window in a vertical split
bind-key C-@ choose-window 'join-pane -h -s "%%"'

set-hook -g client-attached 'run-shell "tiago tmux update-display"'

# Colors {{{1
if-shell -b '[ $(echo "$TMUX_VERSION < 3.2" | bc) -eq 1 ]' {
	color_message_fg=colour208
	color_message_bg=colour237
	color_pane_border=colour235
	color_pane_border_active=colour240
	color_status_fg=brightwhite
	color_status_bg=black
	color_status_window=colour239
	color_status_window_activity=red
	color_status_user=colour33
	color_status_at=colour136
	color_status_host=colour166
	color_status_sync=colour135
	color_status_zoom=colour33

	color_off_status_fg=colour242
	color_off_status_bg=colour236
	color_off_status_window=colour245
	color_off_status_window_activity=red
	color_off_indicator=colour196
	color_off_status_sync=colour96
	color_off_status_zoom=colour26
}
if-shell -b '[ $(echo "$TMUX_VERSION >= 3.2" | bc) -eq 1 ]' {
	%hidden color_message_fg=colour208
	%hidden color_message_bg=colour237
	%hidden color_pane_border=colour235
	%hidden color_pane_border_active=colour240
	%hidden color_status_fg=brightwhite
	%hidden color_status_bg=black
	%hidden color_status_window=colour239
	%hidden color_status_window_activity=red
	%hidden color_status_user=colour33
	%hidden color_status_at=colour136
	%hidden color_status_host=colour166
	%hidden color_status_sync=colour135
	%hidden color_status_zoom=colour33

	%hidden color_off_status_fg=colour242
	%hidden color_off_status_bg=colour236
	%hidden color_off_status_window=colour245
	%hidden color_off_status_window_activity=red
	%hidden color_off_indicator=colour196
	%hidden color_off_status_sync=colour96
	%hidden color_off_status_zoom=colour26
}

# Set pane colors - highlight the active pane
if-shell -b '[ $(echo "$TMUX_VERSION < 2.9" | bc) -eq 1 ]' {
	set-option -g pane-border-fg "$color_pane_border"
	set-option -g pane-active-border-fg "$color_pane_border_active"
}
if-shell -b '[ $(echo "$TMUX_VERSION >= 2.9" | bc) -eq 1 ]' {
	set-option -g pane-border-style "fg=$color_pane_border"
	set-option -g pane-active-border-style "fg=$color_pane_border_active"
}

# Colorize messages in the command line
if-shell -b '[ $(echo "$TMUX_VERSION < 2.9" | bc) -eq 1 ]' {
	set-option -g message-fg "$color_message_fg"
	set-option -g message-bg "$color_message_bg"
	set-option -g message-attr bold
}
if-shell -b '[ $(echo "$TMUX_VERSION >= 2.9" | bc) -eq 1 ]' {
	set-option -g message-style "fg=$color_message_fg,bg=$color_message_bg,bold"
}

# Status Bar {{{1
set-option -g status on			# turn the status bar on
set-option -g status-interval 60	# set update frequency (default 15 seconds)
set-option -g status-justify centre	# center window list for clarity
set-option -g status-left-length 20	# avoid cropping the left side

# visual notification of activity in other windows
set-window-option -g monitor-activity on
set-option -g visual-activity on

# set color for status bar
if-shell -b '[ $(echo "$TMUX_VERSION < 2.9" | bc) -eq 1 ]' {
	set-option -g status-fg "$color_status_fg"
	set-option -g status-bg "$color_status_bg"
	set-option -g status-attr none
}
if-shell -b '[ $(echo "$TMUX_VERSION >= 2.9" | bc) -eq 1 ]' {
	set-option -g status-style "fg=$color_status_fg,bg=$color_status_bg,none"
}

# Set windows properties
if-shell -b '[ $(echo "$TMUX_VERSION < 2.9" | bc) -eq 1 ]' {
	set-window-option -g window-status-fg "$color_status_window"
}
if-shell -b '[ $(echo "$TMUX_VERSION >= 2.9" | bc) -eq 1 ]' {
	set-window-option -g window-status-style "fg=$color_status_window"
}
set-window-option -g window-status-format '#I:#{?pane_synchronized,#[fg=#{color_off_status_sync}],}#{?window_zoomed_flag,#[fg=#{color_off_status_zoom}],}#W'

# Set current window properties

if-shell -b '[ $(echo "$TMUX_VERSION < 2.9" | bc) -eq 1 ]' {
	set-window-option -g window-status-current-fg "$color_status_fg"
	set-window-option -g window-status-current-attr bold
}
if-shell -b '[ $(echo "$TMUX_VERSION >= 2.9" | bc) -eq 1 ]' {
	set-window-option -g window-status-current-style "fg=$color_status_fg,bold"
}
set-window-option -g window-status-current-format '#I:#{?pane_synchronized,#[fg=#{color_status_sync}],}#{?window_zoomed_flag,#[fg=#{color_status_zoom}],}#W'

if-shell -b '[ $(echo "$TMUX_VERSION < 2.9" | bc) -eq 1 ]' {
	set-window-option -g window-status-activity-fg "$color_status_window_activity"
	set-window-option -g window-status-activity-attr bold
}
if-shell -b '[ $(echo "$TMUX_VERSION >= 2.9" | bc) -eq 1 ]' {
	set-window-option -g window-status-activity-style "fg=$color_status_window_activity,bold"
}

wg_is_keys_off="#[fg=$color_off_indicator,bold]#([ $(tmux show-option -qv key-table) = 'off' ] && echo '[OFF] ')#[default]"

set-option -g status-left '#[bold][#S]'
set-option -g status-right "$wg_is_keys_off#[bold]#[fg=$color_status_user]$USER#[fg=$color_status_at]@#[fg=$color_status_host]#h#[default]"

bind -T root F12 {
	set-option prefix None
	set-option key-table off
	set-option status-style "fg=$color_off_status_fg,bg=$color_off_status_bg,none"
	set-window-option window-status-style "fg=$color_off_status_window"
	set-window-option window-status-current-style "fg=$color_off_status_fg,bold"
	set-window-option window-status-activity-style "fg=$color_off_status_window_activity,bold"
	if-shell -F '#{pane_in_mode}' 'send-keys -X cancel' {
		refresh-client -S
	}
}

bind -T off F12 {
	set-option -u prefix
	set-option -u key-table
	set-option -u status-style
	set-window-option -u window-status-style
	set-window-option -u window-status-current-style
	set-window-option -u window-status-activity-style
	refresh-client -S
}
