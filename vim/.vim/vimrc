" ---------- Vim Defaults ----------
let mapleader = '\'             " Leader is backslash

if &loadplugins && !has('packages')
    if has("vim_starting")
        runtime! pack/vendor/opt/pathogen/autoload/pathogen.vim
    endif

    execute pathogen#infect()
endif

filetype plugin on              " Enable plugins to detect file types

" ---------- Colors ----------
syntax enable                   " Enable syntax processing
set background=dark             " Set a dark background profile
try
    let g:hybrid_custom_term_colors = 1
    colorscheme hybrid              " Set color scheme
catch
    colorscheme peachpuff
endtry

" Only do this part when compiled with support for autocommands
if has("autocmd")
    " Enable file type detection
    filetype on

    " Treat .rss files as XML
    autocmd BufNewFile,BufRead *.rss setfiletype xml
endif

" ---------- Indentation ----------
filetype indent on              " Indent depends on filetype

" ---------- Spelling ----------
if has("spell")
    " Change menu color
    highlight PmenuSel ctermfg=black ctermbg=lightgray

    " Set spelling for mail, gitcommit and markdown
    autocmd FileType gitcommit setlocal spell
endif

" ---------- Functions ----------
function! Preserve(command)
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    execute a:command
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction

" ---------- Local Configurations ----------
if filereadable(glob($MYVIMRC . ".local"))
    source $MYVIMRC.local
endif

" ---------- ARM Assembly ----------
autocmd BufNewFile,BufRead *.s,*.S set filetype=arm " arm = armv6/7
